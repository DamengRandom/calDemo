{"id":"index.html","dependencies":[{"name":"./scripts/index.js","dynamic":true,"resolved":"/Users/damonwu/Desktop/temps/code/2018-JS/calcDemo/src/scripts/index.js","parent":"/Users/damonwu/Desktop/temps/code/2018-JS/calcDemo/src/index.html"},{"name":"/Users/damonwu/Desktop/temps/code/2018-JS/calcDemo/.babelrc","includedInParent":true,"mtime":1541507554624},{"name":"/Users/damonwu/Desktop/temps/code/2018-JS/calcDemo/package.json","includedInParent":true,"mtime":1541507015793}],"generated":{"html":"<!DOCTYPE html>\n<html class=\"no-js\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>Chaining Calculator</title>\n    <meta name=\"description\" content=\"chain functions\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <!-- \n      features summary:\n        1. chaining function is fully working, such as calc.add(6).add(5).subtract(1).multiply(2).divide(1).equals(); [It can be tested on part 1]\n        2. simple calculator major functionalities have been done [UI + Logic]\n        3. unit test for testing the (+-*/) major functions\n     -->\n    <section class=\"panel\">\n      <div class=\"row\">\n        <form>\n          <div class=\"area\">\n            <input type=\"text\" id=\"showValue\" value=\"\" disabled=\"\">\n          </div>\n          <div class=\"flex\">\n            <div class=\"col-1\">\n              <div class=\"buttons\">\n                <input class=\"button\" type=\"button\" onclick=\"displayValue('+')\" value=\"&#x2b;\">\n                <input class=\"button\" type=\"button\" onclick=\"displayValue('-')\" value=\"&#x2212;\">\n                <input class=\"button\" type=\"button\" onclick=\"displayValue('*')\" value=\"&#xd7;\">\n              </div>\n              <div class=\"buttons\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(7)\" value=\"7\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(8)\" value=\"8\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(9)\" value=\"9\">\n              </div>\n              <div class=\"buttons\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(4)\" value=\"4\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(5)\" value=\"5\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(6)\" value=\"6\">\n              </div>\n              <div class=\"buttons\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(1)\" value=\"1\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(2)\" value=\"2\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(3)\" value=\"3\">\n              </div>\n              <div class=\"buttons\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue(0)\" value=\"0\">\n                <input class=\"number button\" type=\"button\" onclick=\"displayValue('.')\" value=\".\">\n                <input class=\"reset button\" type=\"button\" onclick=\"resetValue()\" value=\"C\">\n              </div>\n            </div>\n            <div class=\"col-2\">\n              <div class=\"buttons\">\n                <input class=\"button\" type=\"button\" onclick=\"displayValue('/')\" value=\"&#xf7;\">\n              </div>\n              <div class=\"buttons\">\n                <input class=\"button\" type=\"button\" onclick=\"displayValue('(')\" value=\"(\">\n              </div>\n              <div class=\"buttons\">\n                <input class=\"button\" type=\"button\" onclick=\"displayValue(')')\" value=\")\">\n              </div>\n              <div class=\"buttons equal\">\n                <input class=\"button\" type=\"button\" onclick=\"displayResult()\" value=\"=\">\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </section>\n    <script type=\"text/javascript\" src=\"/8361ea490d96e5bcdc2bde43bcf3243b.js\"></script>\n    <script>var isCalculated = false; // part 1\n// basic functions for calculation\n\nvar addCalc = function addCalc(val1, val2) {\n  return parseFloat(val1) + parseFloat(val2);\n};\n\nvar subtractCalc = function subtractCalc(val1, val2) {\n  return parseFloat(val1) - parseFloat(val2);\n};\n\nvar multiplyCalc = function multiplyCalc(val1, val2) {\n  return parseFloat(val1) * parseFloat(val2);\n};\n\nvar divideCalc = function divideCalc(val1, val2) {\n  return parseFloat(val1) / parseFloat(val2);\n};\n\nvar resetCalc = function resetCalc() {\n  return '';\n};\n\nvar equalCalc = function equalCalc(currentVal) {\n  return currentVal;\n}; // chain function for chaining all calculations together\n\n\nvar Calc = function Calc() {\n  this.value = 0; // add function\n\n  this.add = function (newValue) {\n    this.value = addCalc(this.value, newValue);\n    return this;\n  }; // subtract function\n\n\n  this.subtract = function (newValue) {\n    this.value = subtractCalc(this.value, newValue);\n    return this;\n  }; // multiply function\n\n\n  this.multiply = function (newValue) {\n    this.value = multiplyCalc(this.value, newValue);\n    return this;\n  }; // divide function\n\n\n  this.divide = function (newValue) {\n    this.value = divideCalc(this.value, newValue);\n    return this;\n  }; // reset function\n\n\n  this.reset = function () {\n    this.value = resetCalc();\n    return this;\n  }; // equals function\n\n\n  this.equals = function () {\n    this.value = equalCalc(this.value);\n    return this.value;\n  };\n}; // Chaining function test demo\n// var calc = new Calc();\n// calc.add(6).add(5).subtract(1).multiply(2).divide(1).equals();\n// part 2\n// calculator function\n\n\nvar showValueNode = document.getElementById('showValue');\n\nvar displayValue = function displayValue(val) {\n  if (this.isCalculated === true && !isNaN(val)) {\n    // if user clicks numeric buttons, reset value to ''\n    this.isCalculated = false;\n    showValueNode.value = '';\n  }\n\n  if (this.isCalculated === true && isNaN(val)) {\n    // if user clicks non-numeric buttons, continue calculation process\n    this.isCalculated = false;\n    showValueNode.value = document.getElementById('showValue').value;\n  }\n\n  if (this.isCalculated === false) {\n    // normal process\n    showValueNode.value += val;\n  }\n};\n\nvar countDecimals = function countDecimals(value) {\n  // count decinmal places\n  if (Math.floor(value) !== value) {\n    return value.toString().split(\".\")[1].length || 0;\n  }\n\n  return 0;\n};\n\nvar decimalControl = function decimalControl(value) {\n  if (countDecimals(value) > 8) {\n    // fix decimal place value as 8 if calculated value beyonds 8 decimal places\n    return value.toFixed(8);\n  }\n\n  return value;\n};\n\nvar displayResult = function displayResult() {\n  var rawStr = showValueNode.value,\n      copyStr = rawStr;\n  rawStr = rawStr.replace(/[0-9]+/g, '#').replace(/[\\(|\\|\\.)]/g, '');\n  var getNumbers = copyStr.split(/[^0-9\\.]+/),\n      operators = rawStr.split('#').filter(function (n) {\n    return n;\n  }),\n      calcArray = [];\n\n  for (var i = 0; i < getNumbers.length; i++) {\n    calcArray.push(getNumbers[i]);\n\n    if (i < operators.length) {\n      calcArray.push(operators[i]);\n    }\n  }\n\n  if (calcArray.length <= 3) {\n    // if input format is like value1 + or - or * or / value 2\n    switch (calcArray[1]) {\n      case '+':\n        this.isCalculated = true;\n        showValueNode.value = decimalControl(addCalc(calcArray[0], calcArray[2])); // using part 1 calc library add method\n\n        break;\n\n      case '-':\n        this.isCalculated = true;\n        showValueNode.value = decimalControl(subtractCalc(calcArray[0], calcArray[2])); // using part 1 calc library subtract method\n\n        break;\n\n      case '*':\n        this.isCalculated = true;\n        showValueNode.value = decimalControl(multiplyCalc(calcArray[0], calcArray[2])); // using part 1 calc library multiply method\n\n        break;\n\n      case '/':\n        this.isCalculated = true;\n        showValueNode.value = decimalControl(divideCalc(calcArray[0], calcArray[2])); // using part 1 calc library divide method\n\n        break;\n    }\n  } else {\n    this.isCalculated = true;\n    showValueNode.value = decimalControl(eval(calcArray.join(' '))); // handle the multiple values calculation methods, such as a * b + c / b\n  }\n};\n\nvar resetValue = function resetValue() {\n  showValueNode.value = ''; // reset value to 0\n}; // The drawbacks I can think of is that \n// I don't have enough time to handle is to reduce the scripts file size \n// Calculator still needs more time to complete all the features, not completed yet, just a prototype\n// TODO\n// To seperate functions into different components, later smaller files will be imported by index.html file (Personal thoughts)\n// To make display more advanced (able to handle more than 11 characters calculation display)</script>\n    <!-- Total time spent for this task: 6.5 hours -->\n  </body>\n</html>"},"hash":"dfb9614e6bb124fa46e990c596cc2e07","cacheData":{"env":{}}}